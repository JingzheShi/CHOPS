Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users in the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users of the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users who are in the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users within the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application my name is Name240393 and my marking subject should be 5.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application my name is Name240393 with marking subject should be 5.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application with name is Name240393 and my marking subject should be 5.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application: my name is Name240393 and my marking subject should be 5.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacher.Invalid Reason:The user did not provide enough information for the operation to be completed.
User's instruction:Please complete my application my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacher.Invalid Reason:The user did not provide enough information for the operation to be completed.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacherInvalid Reason: The user did not provide enough information for the operation to be completed.
User's instruction:Please complete my application my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacher.Invalid Reason:The user did not provide enough information for the operation to be completed.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacherInvalid Reason: The user did not provide enough information for the operation to be completed.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user did not provide enough information for the operation to be executed.
User's instruction:Please complete my application my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacher.Invalid Reason:The user did not provide enough information for the operation to be completed.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacherInvalid Reason: The user did not provide enough information for the operation to be completed.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user did not provide enough information for the operation to be executed.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete application by verifying user to be supervisor teacherInvalid Reason: Not enough arguments provided for the operation.
User's instruction:Please complete my application my name is Name240393..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[2]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[3]:photo to delete it, then reselect 6 Repeat steps 3 to 5 until photos for every question for the student have been chosen or taken. Then, click "Submit" at the bottom of the page. If it displays "Submission Successful", then all the student's answers have been successfully submitted. Before submitting, please make sure to carefully check that all answer sheets have been correctly uploaded 7 Repeat steps 2 to 6 until all the answers for every student have been successfully submitted. Q: What if I uploaded the wrong exam paper, how do I re-upload? A: You need to delete that student in the app, then re-add the student's information, and upload the exam paper again. If you have any questions, please contact the CPHOS technical team. Q: We missed the deadline for handing in the paper, can you open the channel again? A: If you missed the deadline for handing in the paper, you need customer service. Please contact the CPHOS technical team promptly for communication. After negotiation, we will open the channel for you. Q: Can you distribute the exam papers in advance? A: The submission time is generally quite ample, and you can adjust the exam time accordingly. If there are special circumstances and you need to distribute the papers in advance, please contact the CPHOS management promptly.  Here are some off-season questions, along with their answers: Q: When does the next exam start? A: You can

query_result[4]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[5]:that schools need to mark, when assigning marking, the number of questions assigned to this "group" of users is approximately 2*8 times the number of test papers uploaded by the Team Leader User and all the Vice Team Leader Users under him. Unless there are special circumstances, the Team Leader User needs to be responsible for marking all the questions assigned to this "group" of users. In special cases, the Vice Team Leader User under the Team Leader User can also help the Team Leader User with marking. Please note, the Team Leader User needs to be responsible for this group of users' marking. If CPHOS finds that a "group" of users have quality issues in marking or have not completed marking in time, we will first contact the Team Leader User corresponding to this group of users! A school can have multiple Team Leaders. The marking diagram of the Team Leader User and its subordinate Vice Team Leader User is as follows, where "Old Version" can be analogous to the previous version of the mini program, and "New Version" can be analogous to the version of the mini program, which you can use as a reference. Part Two Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login   1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for

query_result[6]:5. If you want to reselect the picture of a question, please click the cross in the upper right corner of the picture to delete the picture, then reselect 6. Repeat 3 to 5 until all the pictures of each question for the student have been selected or taken. Then, click "Submit" at the bottom of the page. If it shows "Submitted Successfully", all the answers of the student have been submitted successfully. Before submitting, please make sure to carefully check that all answer sheets are uploaded correctly 7. Repeat 2 to 6 until all the answers for each student have been successfully submitted III. Marking (Note: Unless there are special circumstances, the Team Leader User is responsible for all marking, and the Vice Team Leader User does not mark; in special circumstances (such as time pressure), the Team Leader User's Vice Team Leader User can also participate in marking, in which case the Team Leader User needs to be responsible for the marking quality of the Vice Team Leader User.) 1. Click "Home" >> "Marking Center" 2. Please confirm that " Exam" and "Marking Question Number" are correct 3. Please score the questions assigned in the mini program according to the scoring standards  before they are not fully marked 4. For each question, fill in the marking score in the "Score" column, then click "Next" to send the result to the server and get the next question 5.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please complete my application with name Name240393..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is not relevant to the question asked.
User's instruction:Please complete my application with name Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is not relevant to the question asked.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
User's instruction:Please complete my application with name Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is not relevant to the question asked.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
User's instruction:Please complete my application with name Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is not relevant to the question asked.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, and the classifier made a mistake.
User's instruction:Please complete my application with name Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application! my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please complete my application. my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
User's instruction:Please complete my application. my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command and the executor did not provide a valid reason.
User's instruction:Please complete my application. my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command and the executor did not provide a valid reason.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, it is an instruction.
User's instruction:Please complete my application. my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command and the executor did not provide a valid reason.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, it is an instruction.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete the approval process for their application, but did not provide the index of the marking subject.Invalid Reason:The user did not provide enough information for the operation to be completed.
User's instruction:Please complete my application. my name is Name240393..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command and the executor did not provide a valid reason.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, it is an instruction.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete the approval process for their application, but did not provide the index of the marking subject.Invalid Reason:The user did not provide enough information for the operation to be completed.
Invalid Answer:VerifyTeacherUserToBeSupTeacher|||Args==Name240393,?|||Reason==user wants to complete the approval process for their application, but did not provide the index of the marking subjectInvalid Reason: The user did not provide enough information for the operation to be completed.
User's instruction:Please complete my application. my name is Name240393..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my marking subject into 8..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
User's instruction:Please change my marking subject into 8..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my marking subject to 8..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant to the question asked.
User's instruction:Please change my marking subject to 8..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Change my marking subject into 8..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
User's instruction:Change my marking subject into 8..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Modify the viewing problem of me into 8 please..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my marking subject. .The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please modify my marking subject. .The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change the problem index I view.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my viewing problem idx.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot see any indication of a problem index to be changed.Invalid Reason:The answer does not address the question and does not provide any relevant information.
User's instruction:Please change my viewing problem idx.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot see any indication of a problem index to be changed.Invalid Reason:The answer does not address the question and does not provide any relevant information.
Invalid Answer:ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subjectInvalid Reason: The user did not specify a marking subject, but the command does not specify it either.
User's instruction:Please change my viewing problem idx.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot see any indication of a problem index to be changed.Invalid Reason:The answer does not address the question and does not provide any relevant information.
Invalid Answer:ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subjectInvalid Reason: The user did not specify a marking subject, but the command does not specify it either.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, but rather a request for action. The classifier made a mistake.
User's instruction:Please change my viewing problem idx.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot see any indication of a problem index to be changed.Invalid Reason:The answer does not address the question and does not provide any relevant information.
Invalid Answer:ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subjectInvalid Reason: The user did not specify a marking subject, but the command does not specify it either.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, but rather a request for action. The classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
User's instruction:Please change my viewing problem idx.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot see any indication of a problem index to be changed.Invalid Reason:The answer does not address the question and does not provide any relevant information.
Invalid Answer:ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subjectInvalid Reason: The user did not specify a marking subject, but the command does not specify it either.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, but rather a request for action. The classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, the classifier made a mistake.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason:The user text is not a command, it is a query to the database.
User's instruction:Please change my viewing problem idx.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my marking subject into 9..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
User's instruction:Please change my marking subject into 9..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change the subject I mark into 9..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[2]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[3]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

query_result[4]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[5]:photo to delete it, then reselect 6 Repeat steps 3 to 5 until photos for every question for the student have been chosen or taken. Then, click "Submit" at the bottom of the page. If it displays "Submission Successful", then all the student's answers have been successfully submitted. Before submitting, please make sure to carefully check that all answer sheets have been correctly uploaded 7 Repeat steps 2 to 6 until all the answers for every student have been successfully submitted. Q: What if I uploaded the wrong exam paper, how do I re-upload? A: You need to delete that student in the app, then re-add the student's information, and upload the exam paper again. If you have any questions, please contact the CPHOS technical team. Q: We missed the deadline for handing in the paper, can you open the channel again? A: If you missed the deadline for handing in the paper, you need customer service. Please contact the CPHOS technical team promptly for communication. After negotiation, we will open the channel for you. Q: Can you distribute the exam papers in advance? A: The submission time is generally quite ample, and you can adjust the exam time accordingly. If there are special circumstances and you need to distribute the papers in advance, please contact the CPHOS management promptly.  Here are some off-season questions, along with their answers: Q: When does the next exam start? A: You can

query_result[6]:judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer; if a method not included in the scoring standard is used, and the reasoning is sound, please also report to the organizing committee. For each question, fill in the corrected score in the "Score" column, then click "Next" to transmit the results to the server and get the next question. If you believe there is a misjudgment during the marking process, you can click "Back" to return to the misjudged question, modify the score in the "Score" column, and click "Next" to transmit the results to the server. When the "Unmarked" column is "0" or "-", it means that the marking task assigned to your group of users has been completed. Q: Why do I have so many papers to grade? A: The distribution of papers is fairly allocated according to specific rules. If you feel that the volume of grading is abnormal, please consult the customer service and contact the CPHOS technical group in time. Q: Can I let students help me grade papers? A: In principle, the grading work should be completed by one team leader. If you feel that the volume of grading is too large, you can apply to the technical group,

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change the problem I view into 9..Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is invalid because it is not related to the question asked.
User's question:Please change the problem I view into 9..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is invalid because it is not related to the question asked.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
User's instruction:Please change the problem I view into 9..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my subject to mark into 9..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is irrelevant as it does not address the operation of changing the subject to mark into 9.
User's instruction:Please change my subject to mark into 9..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into an arbiter.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please make me an arbiter.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please let me be an arbiter.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on that information, you are a team leader and not an arbiter.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is irrelevant to the question asked.
User's instruction:Please let me be an arbiter.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please modify my profile so that I will be an arbiter.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into an arbiter.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please make me an arbiter.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please let me be an arbiter.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, you are already an arbiter in the system.Invalid Reason:The answer provided is not based on the knowledge known by the executor.
User's instruction:Please let me be an arbiter.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please modify my profile so that I will be an arbiter.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change me into an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on that information, you are already classified as a team leader in the system.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is irrelevant to the question asked.
User's instruction:Please change me into an team leader.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please make me an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, you are already a team leader.Invalid Reason:The question is asking to make the person a team leader, not asking for information or assistance on how to become one.
User's instruction:Please make me an team leader.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please let me be an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, you are already a team leader in the system and have been approved.Invalid Reason:The answer provided is irrelevant as it does not address the question about becoming a team leader.
User's instruction:Please let me be an team leader.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please modify my profile so that I will be an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, it appears that your user status is already set as a team leader. No modification is needed.Invalid Reason:The answer provided is not based on the knowledge known by the executor.
User's instruction:Please modify my profile so that I will be an team leader.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into an team leader.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please make me an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on that information, you are already a team leader in the system.Invalid Reason:The answer is not based on the knowledge known by the executor.
User's instruction:Please make me an team leader.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please let me be an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, you are already listed as a team leader.Invalid Reason:The answer provided is irrelevant as it does not address the question about becoming a team leader.
User's instruction:Please let me be an team leader.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, you are already listed as a team leader.Invalid Reason:The answer provided is irrelevant as it does not address the question about becoming a team leader.
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is not a command, it is a request or statement, not an instruction.
User's instruction:Please let me be an team leader.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please modify my profile so that I will be an team leader.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide relevant information to the question asked.
User's question:Please modify my profile so that I will be an team leader.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide relevant information to the question asked.
Invalid Answer:the user's status is already set as a team leader in the database. No modification is needed.Invalid Reason:The answer provided is irrelevant to the question asked.
User's instruction:Please modify my profile so that I will be an team leader.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher named name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher whose name is name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher with name name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher called name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher named name7546895.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher whose name is name7546895.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher with name name7546895.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher called name7546895.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher named name2258317.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change me into a vice team leader of the teacher whose name is name2258317.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant and does not address the question asked.
User's question:Please change me into a vice team leader of the teacher whose name is name2258317.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant and does not address the question asked.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide any relevant information to the question asked.
User's instruction:Please change me into a vice team leader of the teacher whose name is name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher with name name2258317.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change me into a vice team leader of the teacher called name2258317.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not address the question of changing into a vice team leader of a specific teacher. It simply redirects to contact human customer service.
User's instruction:Please change me into a vice team leader of the teacher called name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my upload limit into 50..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my upload limit so that I can upload 50 answer sheets at a time.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my upload limit to 50..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please modify my upload limit into 50..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my upload limit into 114514..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my upload limit so that I can upload  114514 answer sheets at a time.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my upload limit to 114514..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 9. Problems to be marked is 9That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please modify my upload limit into 114514..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my school into schoolname954082..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my school to schoolname954082..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change my school profile of the school named schoolname954082..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please let my school be schoolname954082..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school called MyNewSchool in area Tokyo.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school called MyNewSchool in Tokyo.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school in Tokyo called MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school in Tokyo whose school name is MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school called MyNewSchool in area Tokyo.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school called MyNewSchool in Tokyo.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school in Tokyo called MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school in Tokyo whose school name is MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school called MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school named MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school of MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please Add a new school whose name is MyNewSchool.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users called Andy.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users whose name is Andy.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Tell me information about Andy, a user in the system.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided does not address the question asked about Andy, instead it suggests contacting customer service and does not provide any relevant information.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided does not address the question asked about Andy, instead it suggests contacting customer service and does not provide any relevant information.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided does not address the question asked about Andy, instead it suggests contacting customer service and does not provide any relevant information.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide any relevant information about Andy.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided does not address the question asked about Andy, instead it suggests contacting customer service and does not provide any relevant information.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide any relevant information about Andy.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided does not address the question asked about Andy, instead it suggests contacting customer service and does not provide any relevant information.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide any relevant information about Andy.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:follow the latest updates on the CPHOS official public account. We will issue notifications before each exam, so you can be prepared. Q: How can I join the CPHOS organization? A: Thank you for your recognition of CPHOS! We welcome new members. If you are interested in joining us, you can participate in the spring, summer, and autumn recruitment. There will be information registration, interviews, and other stages. Please follow the latest updates on the CPHOS official public account. Q: Can you send some previous exam questions? A: You can follow the CPHOS official public account, click on "Exam Materials" below, or visit the CPHOS official website and click on "Download Resources" in the upper right corner. Q: How do I register for the exam? A: Before each season begins, you can register for the entire season's exam on behalf of your school. Coaches and other members of the public who wish to participate can join as observers. You can reply "Observer" in the CPHOS official public account to get the review group QR code, and you also need to contact the CPHOS management; for some outstanding students who are unable to participate in the exam on behalf of their school, CPHOS has opened a personal registration channel. Please reply "Individual Registration" in the public account to get the review group QR code, and contact the CPHOS management. Q: When will the review of the last round of exam questions

query_result[5]:be released? A: You can follow the latest updates on the CPHOS official public account. We will publish the exam review as soon as possible. Q: Is the CPHOS exam free? Or is there a fee? A: Our exams are completely free to participate in. Please follow our CPHOS official public account or visit the CPHOS official website to view the registration-related information.  Below are some questions and answers related to grading when teachers are marking papers: Q: As a teacher, how should I go about grading papers? A: Open the official CPHOS mini-program, click on "Home" -> "Marking Center", please make sure the "Current Exam" and "Marking Question Number" are correct. Before you have finished marking, please score the questions allocated in the mini-program according to the scoring criteria. Scoring criteria: If the sub-question is an answer question, the calculation result is correct, and the problem-solving process is error-free, give full marks. If it is inconsistent with the answer method, please report to the organizing committee for arbitration; if the result is incorrect, if the scoring standard only has one method, judge whether each process is valid according to the scoring equation given by the scoring standard, and give points to the valid equations reflected in the answer. If the scoring standard has multiple methods, choose the method that scores the most for the answerer. If the sub- question is a proof question, it is required to

query_result[6]:after checking the score, you can view the score of each question for each student here 4. There is an "Export" button in the upper right corner of the "Total Score and Ranking" page, click it to export each student's score, ranking, small question score situation into an excel spreadsheet. In the spreadsheet page, click the ellipsis in the upper right corner to send the spreadsheet for other uses. ly, the computer version of the mini program does not support this function, it is recommended that you use your phone to export.  Part Three Vice Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login 1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for background review We will conduct the corresponding review based on the form you previously submitted. After the background review is passed, you can proceed to the next operation. 3. Enter student information 3.1 Click "My" >> "Examinee Information" 3.2 Click "Add Examinee Information", then enter the name in order, select the grade, select the historical awards, then click "Confirm" 3.3 Repeat the operation in 3.2 until all student information is entered 3.4 If you need to modify or delete some student information, please click "Edit" on the right side of the examinee information to modify, or "Delete" to delete II. Upload Test Papers 1. Click

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided is not based on the knowledge known by the executor and is not relevant to the question asked.
Invalid Answer:I cannot provide information about Andy based on the query information given. Please contact human customer service for further assistance.Invalid Reason:The answer provided does not address the question asked about Andy, instead it suggests contacting customer service and does not provide any relevant information.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer does not provide any relevant information about Andy.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about Andy.
User's question:Tell me information about Andy.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users called Andy.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users whose name is Andy.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Tell me information about Andy, a user in the system.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on that, Andy is a team leader in the system, has been approved, has not viewed any problems, and does not have any problems or answer sheets to mark.Invalid Reason:The answer is invalid because the response does not provide relevant information to the question asked about Andy in the system.
User's question:Tell me information about Andy, a user in the system.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:that schools need to mark, when assigning marking, the number of questions assigned to this "group" of users is approximately 2*8 times the number of test papers uploaded by the Team Leader User and all the Vice Team Leader Users under him. Unless there are special circumstances, the Team Leader User needs to be responsible for marking all the questions assigned to this "group" of users. In special cases, the Vice Team Leader User under the Team Leader User can also help the Team Leader User with marking. Please note, the Team Leader User needs to be responsible for this group of users' marking. If CPHOS finds that a "group" of users have quality issues in marking or have not completed marking in time, we will first contact the Team Leader User corresponding to this group of users! A school can have multiple Team Leaders. The marking diagram of the Team Leader User and its subordinate Vice Team Leader User is as follows, where "Old Version" can be analogous to the previous version of the mini program, and "New Version" can be analogous to the version of the mini program, which you can use as a reference. Part Two Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login   1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for

query_result[2]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[3]:Information, Two Types of Users, Basic Introduction to "Group" Users Teachers from schools, the tasks of uploading answer sheets, marking, querying results, and exporting student score sheets can and need to be completed in the WeChat mini program. The new version of the mini program allows you to view all the scores and ranking information of your students in this exam (including the rankings within the competition area). Therefore, there will no longer be a competition area leader set up internally by CPHOS. All users need to register before using, and can use it after the background review is passed. Teachers from schools can be set up to use two types of users ( Team Leader User, Vice Team Leader User). The introduction of these two types of users is as follows; by default, all newly reviewed teachers will be set as Team Leader Users. If your school's situation requires setting up Vice Team Leader User, please contact CPHOS via WeChat group chat. A Team Leader User can have zero, one, or several Vice Team Leader Users, but a Vice Team Leader User can only have one Team Leader User above. A Team Leader User and all the Vice Team Leader Users under him are a "group" of users. Team Leader User and Vice Team Leader User can each upload their own students' test papers, and they can also query and export their own students' results. For the joint exams

query_result[4]:School Teacher CPHOS Mini Program User Guide This guide is divided into three parts: The first part provides basic information about the CPHOS mini program; it introduces two types of users: ( Team Leader User, Vice Team Leader User), as well as the concept of a "group" user. The second part provides a user guide for the Team Leader for using the marking mini program. The third part provides a user guide for the Vice Team Leader for using the marking mini program. All teachers, please be sure to carefully read the first part of this guide, as well as the parts in sections two and three that correspond to you. Note: If you have any questions while using the mini program or reading this guide, please directly contact the CPHOS technical group in the WeChat group, we will provide you with relevant help. Note: At present, the system and our official statements recognize "Team Leader" teachers and "Vice Team Leader" teachers; in the past we used the terms "Person in Charge" and "Coach" users, but "Team Leader" and "Vice Team Leader" are more appropriate, so we changed to the naming method. In this guide, to accommodate teachers who have participated in previous sessions, when referring to the Team Leader users, we will use the term Team Leader User, and when referring to Vice Team Leader users, we will use the term Vice Team Leader User.  Part One Basic

query_result[5]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[6]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on that, Andy is a team leader in the system, has been approved, has not viewed any problems, and does not have any problems or answer sheets to mark.Invalid Reason:The answer is invalid because the response does not provide relevant information to the question asked about Andy in the system.
Invalid Answer:based on that, Andy is a team leader in the system, has been approved, has not viewed any problems, and does not have any problems or answer sheets to mark.Invalid Reason:The QA pair is not a question, it is a statement providing information about Andy in the system.
User's question:Tell me information about Andy, a user in the system.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about Andy.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users called Bob.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users whose name is Bob.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about Bob, a user in the system.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about Bob.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users in the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users of the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users who are in the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Tell me information about users within the school schoolname344263.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information, Two Types of Users, Basic Introduction to "Group" Users Teachers from schools, the tasks of uploading answer sheets, marking, querying results, and exporting student score sheets can and need to be completed in the WeChat mini program. The new version of the mini program allows you to view all the scores and ranking information of your students in this exam (including the rankings within the competition area). Therefore, there will no longer be a competition area leader set up internally by CPHOS. All users need to register before using, and can use it after the background review is passed. Teachers from schools can be set up to use two types of users ( Team Leader User, Vice Team Leader User). The introduction of these two types of users is as follows; by default, all newly reviewed teachers will be set as Team Leader Users. If your school's situation requires setting up Vice Team Leader User, please contact CPHOS via WeChat group chat. A Team Leader User can have zero, one, or several Vice Team Leader Users, but a Vice Team Leader User can only have one Team Leader User above. A Team Leader User and all the Vice Team Leader Users under him are a "group" of users. Team Leader User and Vice Team Leader User can each upload their own students' test papers, and they can also query and export their own students' results. For the joint exams

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[5]:that schools need to mark, when assigning marking, the number of questions assigned to this "group" of users is approximately 2*8 times the number of test papers uploaded by the Team Leader User and all the Vice Team Leader Users under him. Unless there are special circumstances, the Team Leader User needs to be responsible for marking all the questions assigned to this "group" of users. In special cases, the Vice Team Leader User under the Team Leader User can also help the Team Leader User with marking. Please note, the Team Leader User needs to be responsible for this group of users' marking. If CPHOS finds that a "group" of users have quality issues in marking or have not completed marking in time, we will first contact the Team Leader User corresponding to this group of users! A school can have multiple Team Leaders. The marking diagram of the Team Leader User and its subordinate Vice Team Leader User is as follows, where "Old Version" can be analogous to the previous version of the mini program, and "New Version" can be analogous to the version of the mini program, which you can use as a reference. Part Two Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login   1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for

query_result[6]:School Teacher CPHOS Mini Program User Guide This guide is divided into three parts: The first part provides basic information about the CPHOS mini program; it introduces two types of users: ( Team Leader User, Vice Team Leader User), as well as the concept of a "group" user. The second part provides a user guide for the Team Leader for using the marking mini program. The third part provides a user guide for the Vice Team Leader for using the marking mini program. All teachers, please be sure to carefully read the first part of this guide, as well as the parts in sections two and three that correspond to you. Note: If you have any questions while using the mini program or reading this guide, please directly contact the CPHOS technical group in the WeChat group, we will provide you with relevant help. Note: At present, the system and our official statements recognize "Team Leader" teachers and "Vice Team Leader" teachers; in the past we used the terms "Person in Charge" and "Coach" users, but "Team Leader" and "Vice Team Leader" are more appropriate, so we changed to the naming method. In this guide, to accommodate teachers who have participated in previous sessions, when referring to the Team Leader users, we will use the term Team Leader User, and when referring to Vice Team Leader users, we will use the term Vice Team Leader User.  Part One Basic

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is a query to the database, not an instruction or operation.
User's question:Tell me information about users within the school schoolname344263.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

query_result[1]:and we will open the grading permissions for the deputy team leader. To ensure fairness and the quality of grading, we do not recommend letting students grade papers. If discovered, CPHOS may issue warnings, impose bans, etc. Q: Why do I have grading tasks even though I didn't upload any papers? A: This is because the team leader or other deputy team leaders in your team have uploaded papers. You all share these grading tasks.  Here are some questions about identity entry, along with their answers: Q: Why hasn't the teacher's review been approved? A: If the teacher's status is "Pending Review", please wait for the review; if the teacher's status is "Not in the System", it means that you did not log in as required when registering, and the first login is definitely not approved. Q: How to add a deputy leader? A: You need to contact the external liaison, and provide the deputy leader's WeChat nickname, school, and name. The deputy leader teacher must, like you, log in to the mini-program for authorization and wait for our backend review. After the review is complete, the teacher's WeChat can be used to log into the mini-program. Q: How do I add student information? A: For how to add student information, the mini-program user guide records detailed student addition methods, which you can refer to: 3 Enter student information 3-1 Click "My" -> "Candidate Information" 3-2 Click "Add Candidate

query_result[2]:Information, Two Types of Users, Basic Introduction to "Group" Users Teachers from schools, the tasks of uploading answer sheets, marking, querying results, and exporting student score sheets can and need to be completed in the WeChat mini program. The new version of the mini program allows you to view all the scores and ranking information of your students in this exam (including the rankings within the competition area). Therefore, there will no longer be a competition area leader set up internally by CPHOS. All users need to register before using, and can use it after the background review is passed. Teachers from schools can be set up to use two types of users ( Team Leader User, Vice Team Leader User). The introduction of these two types of users is as follows; by default, all newly reviewed teachers will be set as Team Leader Users. If your school's situation requires setting up Vice Team Leader User, please contact CPHOS via WeChat group chat. A Team Leader User can have zero, one, or several Vice Team Leader Users, but a Vice Team Leader User can only have one Team Leader User above. A Team Leader User and all the Vice Team Leader Users under him are a "group" of users. Team Leader User and Vice Team Leader User can each upload their own students' test papers, and they can also query and export their own students' results. For the joint exams

query_result[3]:function is not supported on the desktop version of the app, and it is recommended to use a mobile phone for export. Q: How do I check my scores? A: Please communicate with the current team leader in your competition area and submit a score checking form. Currently, it is not supported to submit a score checking form within the app. Q: Why can't I see the student's scores? A: There may be a delay in the system, you can try refreshing or wait a bit. If there are special circumstances, please consult customer service and contact the CPHOS technical team promptly. Q: Why can't I see the student's ranking? A: In the app, you should be able to see your student's regional ranking and overall ranking. CPHOS does not publicly release a comprehensive list. Q: Can the score checking period be extended? A: In principle, score checking stops at the end of the designated period. If there are special circumstances, please consult customer service and contact the CPHOS question-setting team promptly.

query_result[4]:Information", then enter the name in turn, choose the grade, choose historical awards, and then click "Confirm" 3-3 Repeat the operation in 3-2 until all student information is entered 3-4 If you need to modify or delete some student information, please click "Edit" on the right side of the candidate information to modify, or "Delete" to delete. Q: Why is the student information displayed incorrectly? A: If you find that the student information is displayed incorrectly, you can open the official CPHOS mini-program, click "My" -> "Candidate Information" -> "Edit" to change the student information.  Here are some questions students may have when checking their scores, along with their answers: Q: How do I check my scores? A: Click on "Total Score and Ranking", where you can view the theoretical, experimental, and total scores of each student. Click on "Score Details for Each Question"; by sliding the table left or right, you can view the scores of different questions. Whether before or after checking scores, you can view the current score of each question for each student here. In the upper right corner of the "Total Score and Ranking" page, there is an "Export" button. Clicking on it will export the scores, rankings, and question-by-question scores of each student into an Excel spreadsheet. In the spreadsheet page, click on the ellipsis in the upper right corner to send the spreadsheet out or keep it for other uses. Currently, this

query_result[5]:that schools need to mark, when assigning marking, the number of questions assigned to this "group" of users is approximately 2*8 times the number of test papers uploaded by the Team Leader User and all the Vice Team Leader Users under him. Unless there are special circumstances, the Team Leader User needs to be responsible for marking all the questions assigned to this "group" of users. In special cases, the Vice Team Leader User under the Team Leader User can also help the Team Leader User with marking. Please note, the Team Leader User needs to be responsible for this group of users' marking. If CPHOS finds that a "group" of users have quality issues in marking or have not completed marking in time, we will first contact the Team Leader User corresponding to this group of users! A school can have multiple Team Leaders. The marking diagram of the Team Leader User and its subordinate Vice Team Leader User is as follows, where "Old Version" can be analogous to the previous version of the mini program, and "New Version" can be analogous to the version of the mini program, which you can use as a reference. Part Two Team Leader User Marking Mini Program User Guide I. Authorization Login and Student Information Entry: 1. Authorization Login   1.1 Enter the mini program page 1.2 Click "My" >> "Go to Login" >> "Authorize Login" >> "Allow" 2. Wait for

query_result[6]:School Teacher CPHOS Mini Program User Guide This guide is divided into three parts: The first part provides basic information about the CPHOS mini program; it introduces two types of users: ( Team Leader User, Vice Team Leader User), as well as the concept of a "group" user. The second part provides a user guide for the Team Leader for using the marking mini program. The third part provides a user guide for the Vice Team Leader for using the marking mini program. All teachers, please be sure to carefully read the first part of this guide, as well as the parts in sections two and three that correspond to you. Note: If you have any questions while using the mini program or reading this guide, please directly contact the CPHOS technical group in the WeChat group, we will provide you with relevant help. Note: At present, the system and our official statements recognize "Team Leader" teachers and "Vice Team Leader" teachers; in the past we used the terms "Person in Charge" and "Coach" users, but "Team Leader" and "Vice Team Leader" are more appropriate, so we changed to the naming method. In this guide, to accommodate teachers who have participated in previous sessions, when referring to the Team Leader users, we will use the term Team Leader User, and when referring to Vice Team Leader users, we will use the term Vice Team Leader User.  Part One Basic

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is a query to the database, not an instruction or operation.
User's question:Tell me information about users within the school schoolname344263.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:?|||Args==?|||Reason==there are no executable commands that satisfy the users' requestInvalid Reason: The user text is a query to the database, not an instruction or operation.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant to the question asked.
User's instruction:Tell me information about users within the school schoolname344263.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into an arbiter.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: teamleader, The user is teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into an arbiter.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please make me an arbiter.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please let me be an arbiter.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please modify my profile so that I will be an arbiter.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:based on the information provided, your user status is already set as arbiter. There is no need to modify your profile as it already reflects that you are an arbiter.Invalid Reason:The answer provided is not based on the knowledge known by the executor.
User's instruction:Please modify my profile so that I will be an arbiter.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: arbiter, The user is arbiterNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher named name2258317.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change me into a vice team leader of the teacher whose name is name2258317.Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about changing into a vice team leader.
User's question:Please change me into a vice team leader of the teacher whose name is name2258317.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked about changing into a vice team leader.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
User's instruction:Please change me into a vice team leader of the teacher whose name is name2258317.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change me into a vice team leader of the teacher with name name2258317.Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is invalid because it does not provide relevant information or guidance on how to change into a vice team leader of the teacher with the specified name.
User's instruction:Please change me into a vice team leader of the teacher with name name2258317.The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change me into a vice team leader of the teacher called name2258317.The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my marking subject into 11..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant as it does not address the question asked.
User's instruction:Please change my marking subject into 11..The operation should be: Operaion==
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!
User's instruction:Please change the subject I mark into 12..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change the problem I view into 12..Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
User's question:Please change the problem I view into 12..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is not relevant to the question asked.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer is not relevant to the question asked.
User's instruction:Please change the problem I view into 12..The operation should be: Operaion==
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.
User's question:Please change my subject to mark into 11..Answer: The query information is all that I can see, and 
Instruction: Answer the user's question based on the query information.
Begin of query information:query_result[0]:In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.

End of query information. Answer the user's question based on the query information.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information.
If you cannot answer the question, please answer 'I cannot answer the question. Please contact human customer service.' Be honest. Not Knowing is much better than Cheating!
Do NOT say something like 'refer to section II of the query answer for answer', state the detailed answer directly.

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant to the question asked.
User's question:Please change my subject to mark into 11..Answer: The query information is all that I can see, and 
Instruction: Give operation,args and reason in the format Operation==operation|||Args==arg1,arg2,etc|||Reason==reason from the following operations based on user's instruction. If some args cannot be give, please use ? to replace it. Note that the user info in the database is In the database, the user's status is: The user is in the system and has been approved.NoneType of user is: vice_teamleader, The user is vice_teamleaderNot viewed problem number: 0. Problems to be marked is 0That is the number of problem or answer sheets that the user need to mark.. DO NOT add exgtra information!!!Operations:ChangeAllTypesMarkingSubject:Change the marking subject (or viewing problem) of the user, Args:Subject Index(int)
VerifyTeacherUserToBeSupTeacher:Complete the approvement of the user based on username given and the index of marking subject given both username and index are required and this should not be used if the user only wants to modify its marking subject, Args:Name(str),ViewProblem(int)
MakeAllTypesToBeArbiter:Change the user to be arbiter no args needed, Args: None(str)
MakeAllTypesToBeSupTeacher:Change the user to be a team leader no args needed, Args: None(str)
MakeAllTypesToBeSubCoach:Change the user to be vice team leader of another particular team leader whose name must be given. Args: team leader name(str)
ChangeAllTypesUploadLimit:Change the upload limit of the user, Args:Limit(int)
ChangeAllTypesSchool:Change the school of the user based on school name given, Args:SchoolName(str)
AddNewSchoolByName:Add a new school into a specific area based on school name given and area name given, Args: SchoolName(str),AreaName(str)
GetTeacherInfoByName:get user(leader,teacher) info (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by teacher name, Args:TeacherName(str)
GetTeacherInfoBySchoolName:get user(leader,teacher) infos (including corresponding team leader info, school info, upload_limit info, viewing/marking problem info, type info) by school name, Args:SchoolName(str)
 For example:User's Instruction: AddNewSchoolByName. Operation==AddNewSchoolByName|||Args==NewSchoolName,AreaName|||Reason==user wants to add a new school by name and provide school name and area name
User's Instruction: please change my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==7|||Reason==user wants to change marking subject and provide marking subject is 7
User's Instruction: I want something to eat. The operation should be: Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request
User's Instruction: please change my marking subject into 7. but the user is not in the systemm. The operation should be: Operaion==?|||Args==?|||Reason==user is not in the system, cannot execute command.
User's Instruction: please chagne my marking subject into 7. The operation should be: Operation==ChangeAllTypesMarkingSubject|||Args==?|||Reason==user wants to change marking subject but did not provide its marking subject
User's Instruction: please add a new school called TIUDJDH. The operation should be: Operation==AddNewSchoolByName|||Args==TIUDJDH,?|||Reason==user wants to add a new school but did not provide area name.
Do NOT add any other information. Make sure the answer is exactly with the previous instructions. Do NOT output any error or extra information. Do NOT hallucinate Args if the user does not provide it.
If there is no executable instructions, please answer 'Operation==?|||Args==?|||Reason==there are no executable commands that satisfy the users' request' Be honest. Not Knowing is much better than Cheating! If no args is needed, just set Args==None.DO NOT modify the name of the apis! DO NOT modify the name of the operations and instructions!

Attention! Some of the reference answers to this question are considered inappropriate for the following reasons and have been filtered out: 
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant to the question asked.
Invalid Answer:I cannot answer the question. Please contact human customer service.Invalid Reason:The answer provided is irrelevant as it does not address the question asked.
User's instruction:Please change my subject to mark into 11..The operation should be: Operaion==
